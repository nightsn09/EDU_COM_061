/* Bordered form */
form {
    border: 3px solid #f64e00;
  }
  
  /* Full-width inputs */
  input[type=text], input[type=password] {
    width: 100%;
    padding: 5px 20px;
    margin: 8px 0;
    display:inline-block;
    border: 1px solid #ccc;
    box-sizing: border-box;
  }
  
  /* Set a style for all buttons */
  button {
    background-color: #0476aa;
    color: rgb(255, 252, 252);
    padding: 10px 10px;
    margin: 5px 0;
    border: none;
    cursor: pointer;
    width: 100%;
    position:static;
  }
  
  /* Add a hover effect for buttons */
  button:hover {
    opacity: 0.8;
  }
  
  /* Extra style for the cancel button (red) */
  .cancelbtn {
    width: auto;
    padding: 10px 18px;
    background-color: #f44336;
  }
  
  /* Center the avatar image inside this container */
  .imgcontainer {
    text-align: center;
    margin: 24px 0 12px 0;
  }
  
  /* Avatar image */
  img.avatar {
    width: 10%;
    border-radius: 50%;
  }
  
  /* Add padding to containers */
  .container {
    padding: 10px;
  }
  
  /* The "Forgot password" text */
  span.psw {
    float: right;
    padding-top: 10px;
  }
  
  /* Change styles for span and cancel button on extra small screens */
  @media screen and (max-width: 300px) {
    span.psw {
      display: block;
      float: none;
    }
    .cancelbtn {
      width: 100%;
    }
  }
  body {
    background-image: url("img/hh.jfif");
  }
  html, body {
    padding: 0;
    margin: 0;
    width: 100vw;
    height: 100vh;
    position: relative;
    overflow: hidden;
    background: linear-gradient(#123, #111);
  }
  body {
    animation: theme 21s linear infinite;
    {
    &:after,
    &:before {
        content: '';
        display: block;
        position: fixed;
        z-index: -1;
        top: 0;
        width: 100vw;  // IE/Edge
        height: 100vh; // fallback
        width: 100vmax;
        height: 100vmax;
        background: rgba(0,0,0,0.05);
        animation: background 90s linear infinite;
    }

    &:after {
        left: 15vw;
    }

    &:before {
        right: 15vw;
        animation-delay: -30s;
        animation-direction: reverse;
    }
  }

@keyframes theme {
    0% {
        background: #74C390;
    }
    
    16% {
        background: #5DBDB6;
    }
    
    33% {
        background: #59D4E1;
    }
    
    50% {
        background: #51BCE8;
    }
    
    66% {
        background: #FA5374;
    }    
    
    83% {
        background: #E46653;
    }

    100% {
        background: #74C390;
    }
}

@keyframes background {
    0% {
        transform: rotate(0deg);
    }
    
    100% {
        transform: rotate(360deg);
    }
}
$d: 70;      // density
$w: 600;     // grid size
$s: 3s;       // speed

// Generate the snow image using radial gradients
$grad: ();
@for $i from 0 to $d {
  $v: random(4) + 2;
  $a: random(5) * .1 + .5;
  $grad: $grad, radial-gradient(
      $v+px $v+px at
      (random($w - $v * 2) + $v)+px
      (random($w - $v * 2) + $v)+px, 
      rgba(255,255,255,$a) 50%,
      rgba(0,0,0,0)
  ) !global;
}

// The CSS
html {
  height: 100%;
  background: linear-gradient(#123 30%, #667);
  overflow: hidden;
}
.snow, .snow:before, .snow:after {
  position: absolute;
  top: -$w + px;
  left: 0;
  bottom: 0;
  right: 0;
  background-image: $grad;
  background-size: $w + px $w + px;
  animation: snow $s linear infinite;
  content: "";
}
.snow:after {
  margin-left: -$w/3 + px;
  opacity: .4;
  animation-duration: $s*2;
  animation-direction: reverse;
  filter: blur(3px);
}
.snow:before {
  animation-duration: $s*3;
  animation-direction: reverse;
  margin-left: -$w/2 + px;
  opacity: .65;
  filter: blur(1.5px);
}
@keyframes snow {
  to {
    transform: translateY($w + px);
  }
}

 
  
  
  
  